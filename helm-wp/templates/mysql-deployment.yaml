apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mysql-volume-claim
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-wordpress
spec:
{{- with .Values.accessModes }}
  accessModes:
    {{- toYaml . | nindent 4 }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.storage }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-wordpress
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-wordpress
      tier: {{ .Values.db.tier }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-wordpress
        tier: {{ .Values.db.tier }}
    spec:
      initContainers:
      - name: {{ .Values.initContainers.name }}
        image: {{ .Values.initContainers.image }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-creds
              key: MYSQL_ROOT_PASSWORD
        command: ["/bin/sh","-c"]
        args: ["apt-get update; apt-get install wget unzip -y && wget https://bitcot-testbucket.s3.us-west-2.amazonaws.com/know2.zip && unzip know2.zip && cp know2.sql /docker-entrypoint-initdb.d && cp mysql.sh /docker-entrypoint-initdb.d"]
        volumeMounts:
            - name: {{ .Values.initContainers.Volume.name }}
              mountPath: {{ .Values.initContainers.Volume.mountPath }}

      containers:
      - image: {{ .Values.db.image }}
        name: {{ .Release.Name }}-mysql
        resources:
          {{- toYaml .Values.db.resources | nindent 12 }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-creds
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-creds
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-creds
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mysql-creds
              key: MYSQL_PASSWORD
        ports:
        - containerPort: {{ .Values.db.containerPort }}
          name: {{ .Release.Name }}-mysql
        volumeMounts:
        - name: {{ .Values.db.Volumes.name }}
          mountPath: {{ .Values.db.Volumes.mountPath }}
        - name: {{ .Values.initContainers.Volume.name }}
          mountPath: {{ .Values.initContainers.Volume.mountPath }}
      volumes:
      - name: {{ .Values.db.Volumes.name }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mysql-volume-claim
      - name: {{ .Values.initContainers.Volume.name }}
        emptyDir: {}
